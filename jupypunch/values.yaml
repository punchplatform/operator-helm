#### List of ports

server:
  port: 8888

spark_ui:
  port: 4040

blockmanager:
  port: 7777

driver:
  port: 2222

ingress:
  # -- enable an ingress
  enabled: true
  # -- ingress url
  url: jupypunch.punch
  urlSparkUI: spark.punch
  # -- ingress class name to select an ingress controller
  ingressClassName: ""
  ## activate tls to expose ingress with a certificate
  tls: false
  secretName: jupypunch-secret
  certManagement: cert-manager # can be cert-manager or imported
  #activated when cert_management = cert-manager
  certManager:
    issuerType: cluster-issuer # can be cluster-issuer or issuer
    issuerName: myissuer # issuer name

#### Kubernetes

kubernetes:
  service_account: admin-user

#### Artifacts server

punch.artifacts.server.url: http://artifacts-server.punch-artifacts:4245

#### Application
application:
  image: ghcr.io/punchplatform/jupypunch
  imagePullPolicy: IfNotPresent
  replicas: 1
  resources: 
    requests:
      cpu: 2
      memory: 2Gi

#### Notebook Persistence

s3ContentsManager:
  enabled: false
  bucket: jupyter

#### Database

s3:
  access_key: minio
  secret_key: password
  endpoint: http://minio.object-store:9002

elasticsearch:
  http_hosts:
    - host: punchplatform-es-default.doc-store
      port: 9200
      scheme: http
  security:
    credentials:
      username: elastic
      password: elastic

kafka:
  kafka.bootstrap.servers: kafka-kafka-bootstrap.processing:9092


#### Spark conf
spark_conf:
  spark.hadoop.fs.s3a.access.key: "{{ .Values.s3.access_key }}"
  spark.hadoop.fs.s3a.secret.key: "{{ .Values.s3.secret_key }}"
  spark.hadoop.fs.s3a.endpoint: "{{ .Values.s3.endpoint }}"
  spark.hadoop.fs.s3a.path.style.access: "true"
  spark.hadoop.fs.s3a.aws.credentials.provider: "org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider"